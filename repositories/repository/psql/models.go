// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0

package psql

import (
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type TransactionType string

const (
	TransactionTypeSell TransactionType = "sell"
	TransactionTypeRent TransactionType = "rent"
)

func (e *TransactionType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TransactionType(s)
	case string:
		*e = TransactionType(s)
	default:
		return fmt.Errorf("unsupported scan type for TransactionType: %T", src)
	}
	return nil
}

type NullTransactionType struct {
	TransactionType TransactionType
	Valid           bool // Valid is true if TransactionType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullTransactionType) Scan(value interface{}) error {
	if value == nil {
		ns.TransactionType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.TransactionType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullTransactionType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.TransactionType), nil
}

type Property struct {
	ID                               uuid.UUID
	Humanreadableid                  string
	CreatedAt                        time.Time
	UpdatedAt                        time.Time
	Title                            string
	Floor                            int32
	UserID                           uuid.UUID
	Images                           []string
	Thumbnail                        string
	IsFeatured                       bool
	EnergyClass                      string
	EnergyConsumptionPrimary         string
	EnergyEmissionsIndex             string
	EnergyConsumptionGreen           string
	DestinationResidential           bool
	DestinationCommercial            bool
	DestinationOffice                bool
	DestinationHoliday               bool
	OtherUtilitiesTerrance           bool
	OtherUtilitiesServiceToilet      bool
	OtherUtilitiesUndergroundStorage bool
	OtherUtilitiesStorage            bool
	PropertyTransaction              TransactionType
	FurnishedNot                     bool
	FurnishedPartially               bool
	FurnishedComplete                bool
	FurnishedLuxury                  bool
	InteriorNeedsRenovation          bool
	InteriorHasRenovation            bool
	InteriorGoodState                bool
	HeatingTermoficare               bool
	HeatingCentralHeating            bool
	HeatingBuilding                  bool
	HeatingStove                     bool
	HeatingRadiator                  bool
	HeatingOtherElectrical           bool
	HeatingGasConvector              bool
	HeatingInfraredPanels            bool
	HeatingFloorHeating              bool
}

type User struct {
	ID           uuid.UUID
	CreatedAt    time.Time
	Isadmin      bool
	Issu         bool
	Email        string
	Passwordhash string
}
